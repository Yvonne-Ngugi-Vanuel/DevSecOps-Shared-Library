name: "Trivy Container Image Scan"
description: "Scan a container image for vulnerabilities"
inputs:
  image:
    description: "Image ref (e.g., ghcr.io/org/app:tag)"
    required: true
  fail-on-severity:
    description: "Fail if >= this severity found (UNKNOWN,LOW,MEDIUM,HIGH,CRITICAL)"
    required: false
    default: "HIGH"
runs:
  using: "composite"
  steps:
    - name: Install Trivy (pinned)
      shell: bash
      run: |
        set -e
        TRIVY_VER=0.54.1
        curl -sfL https://github.com/aquasecurity/trivy/releases/download/v${TRIVY_VER}/trivy_${TRIVY_VER}_Linux-64bit.tar.gz \
          | tar -zx
        sudo mv trivy /usr/local/bin/
        trivy --version
    - name: Scan Image
      shell: bash
      run: |
        set -e
        trivy image --security-checks vuln,secret,config \
          --severity UNKNOWN,LOW,MEDIUM,HIGH,CRITICAL \
          --format json -o trivy-container-results.json "${{ inputs.image }}" || true
        python3 - <<'PY'
        import json, os, sys
        t = os.getenv("THRESH","${{ inputs.fail-on-severity }}").upper()
        order = ["UNKNOWN","LOW","MEDIUM","HIGH","CRITICAL"]
        data = json.load(open("trivy-container-results.json"))
        hit=False
        for result in data.get("Results",[]):
          for vuln in result.get("Vulnerabilities",[]) or []:
            sev = vuln.get("Severity","UNKNOWN").upper()
            if sev in order and order.index(sev) >= order.index(t):
              hit=True; break
          if hit: break
        if hit:
          print(f"Trivy Image found issues >= {t}; failing.")
          sys.exit(2)
        print("Trivy Image threshold OK.")
        PY
    - name: Upload Image results
      uses: actions/upload-artifact@v4
      with:
        name: trivy-container-results
        path: trivy-container-results.json
